#include "includes/h_map.h"
#include "includes/h_tank.h"

int main(void)
{
    const char *program_title = "Tank_Zone";
    const short window_width = 800;
    const short window_height = 800;
    const short map_width = 32;         // ширина игровой карты [кол-во блоков]
    const short map_height = 32;        // высота игровой карты [кол-во блоков]

    // игровая карта: игровые блоки
    std::string str_map[map_width] = {
        "02000200202002020022000220002000",
        "11110220020202020202020000202000",
        "11102002002020002002200002000200",
        "11111200220020200020202000002000",
        "02111002002200200200020022000020",
        "20020202202002002002200200020200",
        "02000200202002020022000220002000",
        "00020220020202020202020000202000",
        "02002002002020002002200002000200",
        "00200200220020200020101000002000",
        "02002002002200210200020022000020",
        "20020202202002002111200200020200",
        "00200200220020201202010001002000",
        "02002002002200200211120022000020",
        "20020202202002012011101200020200",
        "02000200202002020011100220002000",
        "00200200220020200020202000002000",
        "02002002002200200200020022000020",
        "20020202202002002002200200020200",
        "02000200202002020022000220002000",
        "20020202202002002002200200020200",
        "00200200220020200020202000002000",
        "02002002002200200200020022000020",
        "20020202202002002002200200020200",
        "20020202202002002002200200020200",
        "00200200220020200020202000002000",
        "02002002002200200200020022000020",
        "20020202202002002002200200020200",
        "02000200202002020022000220002000",
        "00200200220020200020202000002000",
        "02002002002200200200020022000020",
        "20020202202002002002200200020200"
    };

    // игровая карта: игровые постройки
    std::string str_map_borders[map_width] = {
        "00000000000000000000000000000000",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "0                              0",
        "00000000000000000000000000000000",
    };


    RenderWindow window(
        VideoMode(window_width, window_height), 
        program_title
    );

    Clock clock;        // объект: часы
    float time = 0;     // переменная хранимая игровое время в микросекундах
    
    /* игровые объекты */
    Tank player = Tank(0.5f, 0.3f, 0.3f);
    
    /* установка начальных координат игрока */
    player.set_pos(
        (float) window_width / 2, 
        (float) window_height / 2
    );

    while (window.isOpen()) {
        // перерасчет времени
        time = clock.getElapsedTime().asMicroseconds() / 1000;
        clock.restart();    // перерасчет времени

        Event event;   // событие
        
        // обработка закрытия программы
        if (window.pollEvent(event) && (event.type == Event::Closed))
            window.close();

        window.clear();

        /* отрисовка / обновление объектов */
        player.update(time, window);

        window.display();   // вывод окна
    }

    return 0;    
}